<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Advent of Code on bohlender.pro</title>
    <link>https://bohlender.pro/tags/advent-of-code/</link>
    <description>Recent content in Advent of Code on bohlender.pro</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <managingEditor>contact@bohlender.pro (Dimitri Bohlender)</managingEditor>
    <webMaster>contact@bohlender.pro (Dimitri Bohlender)</webMaster>
    <copyright>Â© Dimitri Bohlender</copyright>
    <lastBuildDate>Sat, 22 Jan 2022 15:06:54 +0100</lastBuildDate><atom:link href="https://bohlender.pro/tags/advent-of-code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Solving the &#34;Seven Segment Search&#34; Puzzle with Z3</title>
      <link>https://bohlender.pro/blog/aoc-seven-segment-search-with-z3/</link>
      <pubDate>Sat, 22 Jan 2022 15:06:54 +0100</pubDate>
      <author>contact@bohlender.pro (Dimitri Bohlender)</author>
      <guid>https://bohlender.pro/blog/aoc-seven-segment-search-with-z3/</guid>
      <description>&lt;p&gt;This week I stumbled upon &lt;a href=&#34;https://www.reddit.com/r/adventofcode/comments/rbwnh5/2021_day_8_can_it_be_solved_as_a_constraint/&#34;&gt;someone wondering&lt;/a&gt; whether the &lt;strong&gt;second part&lt;/strong&gt; of the recent &lt;a href=&#34;https://adventofcode.com/2021/day/8&#34;&gt;Advent of Code puzzle &amp;ldquo;Seven Segment Search&amp;rdquo;&lt;/a&gt; can be expressed as a constraint satisfaction problem.
As attested by the replies: yes, it can.
However, I think the question deserves a more extensive discussion than just a few comments in a thread.
This post tries to provide a more instructive answer and raise awareness for the tradeoffs or solver misuses some solutions put up with.&lt;/p&gt;
&lt;p&gt;I assume that the reader is familiar with mathematical notation and&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;just struggles to express the posed problem in a formal, declarative way, &lt;em&gt;or&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;is interested in seeing how the &lt;a href=&#34;https://en.wikipedia.org/wiki/Satisfiability_modulo_theories&#34;&gt;SMT&lt;/a&gt; solver &lt;a href=&#34;https://github.com/Z3Prover/z3/&#34;&gt;Z3&lt;/a&gt; can be used to express and solve the problem in several logics.
It takes only few steps to get from a quantifier-laden high-level formulation to what is effectively &lt;a href=&#34;https://en.wikipedia.org/wiki/Propositional_logic&#34;&gt;propositional logic&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
